# Enable upgrading of connection (and websocket proxying) depending on the
# presence of the upgrade field in the client request header
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Create an upstream alias
upstream emphasoft {
    server app:8000;
}

server {
    listen 80;
#    listen 443 ssl;
    server_name semenov.fvds.ru;

#    ssl_certificate /etc/letsencrypt/live/semenov.fvds.ru/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/semenov.fvds.ru/privkey.pem;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    port_in_redirect off;
    autoindex on;
    client_max_body_size 100m;

#    if ($server_port = 80) { set $https_redirect 1; }
#    if ($https_redirect = 1) { return 301 https://semenov.fvds.ru$request_uri; }
#
#    location /.well-known/acme-challenge/ { root /var/www/certbot; }

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Pass request to the upstream alias
        if (!-f $request_filename) {
            proxy_pass http://emphasoft;
            break;
        }

        # Require http version 1.1 to allow for upgrade requests
        proxy_http_version 1.1;

        # We want proxy_buffering off for proxying to websockets.
        proxy_buffering off;

        # http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if you use HTTPS:
        # proxy_set_header X-Forwarded-Proto https;
        # pass the Host: header from the client for the sake of redirects
        proxy_set_header Host $http_host;

        # We've set the Host header, so we don't need Nginx to muddle
        # about with redirects
        proxy_redirect off;

        # Depending on the request value, set the Upgrade and
        # connection headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # proxy_read_timeout  36000s;
        keepalive_timeout 604800;
        proxy_connect_timeout 604800;
        proxy_send_timeout 604800;
        proxy_read_timeout 604800;

        uwsgi_ignore_client_abort on;
    }

    location /static/ {
        gzip on;
        gzip_types text/plain text/xml application/xml application/x-javascript text/javascript text/css text/json;
        gzip_min_length  1000;
        gzip_proxied     any;
        gzip_comp_level  6;
        root /application/;
        access_log off;
        expires 3d;
    }
}

